query getProjectGraph($project: ID!) {
    node(id: $project) {
        ... on Project {
            ...GraphInfo
            relationLayouts {
                nodes {
                    relation {
                        id
                    }
                    points {
                        x
                        y
                    }
                }
            }
            relationPartnerLayouts {
                nodes {
                    relationPartner {
                        id
                    }
                    pos {
                        x
                        y
                    }
                }
            }
        }
    }
}

mutation addComponentVersionToProject($project: ID!, $componentVersion: ID!) {
    addComponentVersionToProject(input: { componentVersion: $componentVersion, project: $project }) {
        componentVersion {
            component {
                template {
                    id
                }
            }
        }
    }
}

mutation removeComponentVersionFromProject($project: ID!, $componentVersion: ID!) {
    removeComponentVersionFromProject(input: { componentVersion: $componentVersion, project: $project }) {
        project {
            id
        }
    }
}

mutation createRelation($start: ID!, $end: ID!, $template: ID!) {
    createRelation(input: { start: $start, end: $end, template: $template, templatedFields: [] }) {
        relation {
            id
        }
    }
}

mutation deleteRelation($id: ID!) {
    deleteRelation(input: { id: $id }) {
        id
    }
}

fragment GraphInfo on Project {
    components {
        nodes {
            ...GraphComponentVersionInfo
        }
    }
    manageComponents: hasPermission(permission: MANAGE_COMPONENTS)
    defaultView {
        id
    }
}

fragment GraphComponentVersionInfo on ComponentVersion {
    version
    ...GraphRelationPartnerInfo
    interfaceDefinitions {
        nodes {
            visibleInterface {
                ...GraphRelationPartnerInfo
            }
            interfaceSpecificationVersion {
                id
                version
                interfaceSpecification {
                    id
                    name
                    template {
                        ...GraphRelationPartnerTemplateInfo
                    }
                    templatedFields {
                        name
                        value
                    }
                }
            }
        }
    }
    component {
        id
        name
        template {
            ...GraphRelationPartnerTemplateInfo
        }
        templatedFields {
            name
            value
        }
    }
    intraComponentDependencySpecifications {
        nodes {
            id
            name
            incomingParticipants {
                nodes {
                    interface {
                        id
                    }
                }
            }
            outgoingParticipants {
                nodes {
                    interface {
                        id
                    }
                }
            }
            type {
                id
                name
            }
        }
    }
    relateFromComponent: hasPermission(permission: RELATE_FROM_COMPONENT)
}

fragment GraphAggregatedIssueInfo on AggregatedIssue {
    id
    type {
        id
        name
        iconPath
    }
    count
    isOpen
    outgoingRelations(filter: { end: { relationPartner: { partOfProject: $project } } }) {
        nodes {
            end {
                id
                relationPartner {
                    id
                }
            }
            type {
                name
                id
            }
        }
    }
}

fragment GraphRelationPartnerInfo on RelationPartner {
    id
    __typename
    outgoingRelations(filter: { end: { partOfProject: $project } }) {
        nodes {
            id
            template {
                ...GraphRelationTemplateInfo
            }
            end {
                id
            }
            templatedFields {
                name
                value
            }
        }
    }
    aggregatedIssues {
        nodes {
            ...GraphAggregatedIssueInfo
        }
    }
}

fragment FillStyleInfo on FillStyle {
    color
}

fragment StrokeStyleInfo on StrokeStyle {
    color
    dash
}

fragment GraphRelationPartnerTemplateInfo on RelationPartnerTemplate {
    id
    name
    fill {
        ...FillStyleInfo
    }
    stroke {
        ...StrokeStyleInfo
    }
    shapeType
    shapeRadius
}

fragment GraphRelationTemplateInfo on RelationTemplate {
    id
    name
    stroke {
        ...StrokeStyleInfo
    }
    markerType
}
